apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: "{{ .Values.app }}-{{ .Values.mcpServersApplication.name }}"
  namespace: {{ .Values.argocdNamespace }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/part-of: {{ .Values.app }}
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: "{{ .Values.dataScienceProjectNamespace }}"
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/template/spec/containers/0/image
  source:
    repoURL: "{{ .Values.vcs.uri }}"
    targetRevision: "{{ .Values.mcpServersApplication.targetRevision }}"
    path: "{{ .Values.mcpServersApplication.path }}"
    helm:
      values: |
        app: {{ .Values.mcpServersApplication.name }}
        partOf: {{ .Values.app }}

        argocdNamespace: {{ .Values.argocdNamespace }}
        
        createNamespace: false
        namespace: {{ .Values.dataScienceProjectNamespace }}

        {{- if .Values.mcpServers }}
        servers:
        {{- range .Values.mcpServers }}
          - id: {{ .id }}
            provider_id: {{ .provider_id }}
            vcs:
              uri: {{ .vcs.uri }}
              ref: {{ .vcs.ref }}
              path: {{ .vcs.path }}
            image: {{ .image }}
            mcp_transport: {{ .mcp_transport }}
            protocol: {{ .protocol }}
            host: {{ .host }}
            port: {{ .port }}
            uri: {{ .uri }}
            replicas: {{ .replicas | default 1 }}
            {{- if .resources }}
            resources:
              limits:
                cpu: {{ .resources.limits.cpu | default "2" }}
                memory: {{ .resources.limits.memory | default "4Gi" }}
              requests:
                cpu: {{ .resources.requests.cpu | default "250m" }}
                memory: {{ .resources.requests.memory | default "500Mi" }}
            {{- end }}
        {{- end }}
        {{- end }}
        
  syncPolicy:
    automated:
      selfHeal: true
