---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.app }}-run
  namespace: {{ .Values.namespace }}
stringData:
  run.yaml: |
    version: '2'
    image_name: rh
    apis:
    - agents
    - datasetio
    - eval
    - inference
    - safety
    - scoring
    - telemetry
    - tool_runtime
    - vector_io
    providers:
      inference:
      {{- range .Values.models }}
      - provider_id: {{ .name | replace " " "-" | lower }}
        provider_type: remote::vllm
        config:
          url: ${env.{{ include "rag-lsd.envVarName" .name }}_URL}
          model: ${env.{{ include "rag-lsd.envVarName" .name }}_MODEL}
          {{- if .api_key }}
          api_key: ${env.{{ include "rag-lsd.envVarName" .name }}_API_KEY}
          {{- end }}
          {{- if .tls_verify }}
          tls_verify: ${env.{{ include "rag-lsd.envVarName" .name }}_TLS_VERIFY:false}
          {{- end }}
          {{- if .max_tokens }}
          max_tokens: ${env.{{ include "rag-lsd.envVarName" .name }}_MAX_TOKENS:12000}
          {{- end }}
      {{- end }}
      - provider_id: sentence-transformers
        provider_type: inline::sentence-transformers
        config: {}
      vector_io:
      - provider_id: milvus
        provider_type: inline::milvus
        config:
          db_path: ${env.MILVUS_DB_PATH}
      safety:
        - provider_id: trustyai_fms
          provider_type: remote::trustyai_fms
          config:
            orchestrator_url: ${env.FMS_ORCHESTRATOR_URL}
            shields: {}
      agents:
      - provider_id: meta-reference
        provider_type: inline::meta-reference
        config:
          persistence_store:
            type: sqlite
            namespace: null
            db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/agents_store.db
          responses_store:
            type: sqlite
            db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/responses_store.db
      eval:
      - provider_id: trustyai_lmeval
        provider_type: remote::trustyai_lmeval
        config:
            use_k8s: True
            base_url: ${env.VLLM_URL:http://localhost:8000/v1}
      datasetio:
      - provider_id: huggingface
        provider_type: remote::huggingface
        config:
          kvstore:
            type: sqlite
            namespace: null
            db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/huggingface_datasetio.db
      - provider_id: localfs
        provider_type: inline::localfs
        config:
          kvstore:
            type: sqlite
            namespace: null
            db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/localfs_datasetio.db
      scoring:
      - provider_id: basic
        provider_type: inline::basic
        config: {}
      - provider_id: llm-as-judge
        provider_type: inline::llm-as-judge
        config: {}
      - provider_id: braintrust
        provider_type: inline::braintrust
        config:
          openai_api_key: ${env.OPENAI_API_KEY:}
      telemetry:
      - provider_id: meta-reference
        provider_type: inline::meta-reference
        config:
          service_name: "${env.OTEL_SERVICE_NAME:\u200B}"
          sinks: ${env.TELEMETRY_SINKS:console,sqlite}
          sqlite_db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/trace_store.db
      tool_runtime:
      - provider_id: brave-search
        provider_type: remote::brave-search
        config:
          api_key: ${env.BRAVE_SEARCH_API_KEY:}
          max_results: 3
      - provider_id: tavily-search
        provider_type: remote::tavily-search
        config:
          api_key: ${env.TAVILY_SEARCH_API_KEY:}
          max_results: 3
      - provider_id: rag-runtime
        provider_type: inline::rag-runtime
        config: {}
      - provider_id: model-context-protocol
        provider_type: remote::model-context-protocol
        config: {}
    metadata_store:
      type: sqlite
      db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/registry.db
    inference_store:
      type: sqlite
      db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/rh}/inference_store.db
    models:
    {{- range .Values.models }}
    - metadata: {}
      model_id: {{ .name | replace " " "-" | lower }}
      provider_id: {{ .name | replace " " "-" | lower }}
      model_type: llm
    {{- end }}
    - metadata:
        embedding_dimension: 768
      model_id: granite-embedding-125m
      provider_id: sentence-transformers
      provider_model_id: ibm-granite/granite-embedding-125m-english
      model_type: embedding
    shields: []
    vector_dbs: []
    datasets: []
    scoring_fns: []
    benchmarks: []
    tool_groups:
    - toolgroup_id: builtin::websearch
      provider_id: tavily-search
    - toolgroup_id: builtin::rag
      provider_id: rag-runtime
    {{- range .Values.mcpServers }}
    - toolgroup_id: {{ .id }}
      provider_id: {{ .provider_id }}
      mcp_endpoint:
        uri: {{ .endpoint.uri }}
    {{- end }}
    
    server:
      port: 8321
    external_providers_dir: /opt/app-root/.llama/providers.d

