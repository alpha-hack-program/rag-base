---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: {{ .Values.app }}
  name: {{ .Values.app }}-env
  namespace: {{ .Values.namespace }}
type: Opaque
stringData:
  MODEL_MAP_PATH: "{{ .Values.workingDir }}/data/model_map.json"
  EMBEDDING_MAP_PATH: "{{ .Values.workingDir }}/data/embedding_map.json"
  PROMPTS_PATH: "{{ .Values.workingDir }}/data/prompts.yaml"
  EMBEDDINGS_DEFAULT_MODEL: "{{ .Values.embeddingsDefaultModel }}"
  MILVUS_HOST: "{{ .Values.milvus.host }}"
  MILVUS_PORT: "{{ .Values.milvus.port }}"
  MILVUS_USERNAME: "{{ .Values.milvus.username }}"
  MILVUS_PASSWORD: "{{ .Values.milvus.password }}"
  MILVUS_COLLECTION_NAME: "{{ .Values.milvus.collectionName }}"
  MINIMUM_COSINE_DISTANCE: "{{ .Values.minimumCosineDistance }}"
---
# Secret for model map json
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.app }}-model-map
  namespace: {{ .Values.namespace }}
stringData:
  model_map.json: |
    {
    {{- range $index, $model := .Values.models }}
      "{{ $model.name }}": {
        "url": "{{ $model.url }}",
        "model": "{{ $model.model }}",
        "api_key": "{{ $model.api_key }}"
      }{{ if ne (add $index 1) (len $.Values.models) }},{{ end }}
    {{- end }}
    }
---
# Secret for embedding map json
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.app }}-embedding-map
  namespace: {{ .Values.namespace }}
stringData:
  embedding_map.json: |
    {
    {{- if .Values.embeddings }}
    {{- range $index, $embedding := .Values.embeddings }}
      "{{ $embedding.name }}": {
        "url": "{{ $embedding.url }}",
        "model": "{{ $embedding.model }}",
        "api_key": "{{ $embedding.api_key }}"
        "dimension": "{{ $embedding.dimension | default 1024 }}"
      }{{ if ne (add $index 1) (len $.Values.embeddings) }},{{ end }}
    {{- end }}
    {{- end }}
    }
